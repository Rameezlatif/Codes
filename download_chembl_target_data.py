# -*- coding: utf-8 -*-
"""Download_Chembl_target_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yszKLVZlwSRJ8fBwN9ivOsVAGMrO3KE6
"""

import pandas as pd

import pandas as pd

# Load your CSV data into a DataFrame without specifying a delimiter
df = pd.read_csv('string_interactions.csv', header=None, names=['pair_column'])

# Extract unique pairs from the specified column
unique_pairs = df['pair_column'].str.strip().unique()

# Save the unique pairs to a text file
output_file = 'unique_pairs.txt'  # Replace with the desired output file name

with open(output_file, 'w') as file:
    for pair in unique_pairs:
        file.write(pair + '\n')

import pandas as pd

# Load your CSV data into a DataFrame without specifying a delimiter
df = pd.read_csv('string_interactions.csv', header=None, names=['pair_column'])

# Extract unique pairs that contain "TRAF6"
filtered_pairs = df[df['pair_column'].str.contains('TRAF6')]['pair_column'].str.strip().unique()

# Save the unique pairs to a text file
output_file = 'unique_pairs_with_TRAF6.txt'  # Replace with the desired output file name

with open(output_file, 'w') as file:
    for pair in filtered_pairs:
        file.write(pair + '\n')

!pip install rdkit

!pip install chembl-webresource-client

import pandas as pd
from chembl_webresource_client.new_client import new_client
from rdkit import Chem
from rdkit.Chem import PandasTools

# List of targets
targets = [
    'ECSIT', 'IRAK2', 'TAB1', 'TAB2', 'TBK1', 'TIFA', 'TLR3', 'TRAF5', 'TRAF6', 'UBE2N', 'UBE2V1'
]

# Function to fetch active small molecule inhibitors for a target
def fetch_and_save_inhibitors(target_name):
    # Initialize ChEMBL client
    chembl = new_client

    # Search for the target in ChEMBL
    target = chembl.target
    target_info = target.search(target_name)

    if not target_info:
        print(f"Target {target_name} not found in ChEMBL.")
        return

    # Get the target's ChEMBL ID
    target_id = target_info[0]['target_chembl_id']

    # Search for active small molecule inhibitors
    activities = chembl.activity
    results = activities.filter(target_chembl_id=target_id, pchembl_value__gt=6)  # Adjust the pIC50 threshold as needed

    if not results:
        print(f"No active inhibitors found for {target_name}.")
        return

    # Convert the results to a Pandas DataFrame
    df = PandasTools.LoadSDF(Chem.MolToMolBlock(results.only('canonical_smiles', 'molecule_chembl_id')))

    # Save the DataFrame to an SDF file
    sdf_file = f'{target_name}_inhibitors.sdf'
    PandasTools.WriteSDF(df, sdf_file)

    print(f"Saved {len(df)} active inhibitors for {target_name} to {sdf_file}.")

# Loop through the targets and fetch/save inhibitors
for target in targets:
    fetch_and_save_inhibitors(target)

# Create a DataFrame showing the total number of molecules for each target
data = []
for target in targets:
    try:
        sdf_file = f'{target}_inhibitors.sdf'
        suppl = Chem.SDMolSupplier(sdf_file)
        num_molecules = len([mol for mol in suppl if mol])
        data.append({'Target': target, 'Total Molecules': num_molecules})
    except FileNotFoundError:
        data.append({'Target': target, 'Total Molecules': 0})

df_total_molecules = pd.DataFrame(data)

# Save the DataFrame to a CSV file
df_total_molecules.to_csv('total_molecules_per_target.csv', index=False)

print("Total molecules per target:")
print(df_total_molecules)

import pandas as pd
from chembl_webresource_client.new_client import new_client

# List of targets
targets = [
    'ECSIT', 'IRAK2', 'TAB1', 'TAB2', 'TBK1', 'TIFA', 'TLR3', 'TRAF5', 'TRAF6', 'UBE2N', 'UBE2V1'
]

# Function to fetch active small molecule inhibitors for a target
def fetch_and_save_inhibitors(target_name):
    # Initialize ChEMBL client
    chembl = new_client

    # Search for the target in ChEMBL
    target = chembl.target
    target_info = target.search(target_name)

    if not target_info:
        print(f"Target {target_name} not found in ChEMBL.")
        return

    # Get the target's ChEMBL ID
    target_id = target_info[0]['target_chembl_id']

    # Search for active small molecule inhibitors
    activities = chembl.activity
    results = activities.filter(target_chembl_id=target_id, pchembl_value__gt=6)  # Adjust the pIC50 threshold as needed

    if not results:
        print(f"No active inhibitors found for {target_name}.")
        return

    # Create a DataFrame from the results
    df = pd.DataFrame(results)

    # Save the DataFrame to a CSV file
    csv_file = f'{target_name}_inhibitors.csv'
    df.to_csv(csv_file, index=False)

    print(f"Saved {len(df)} active inhibitors for {target_name} to {csv_file}.")

# Loop through the targets and fetch/save inhibitors
for target in targets:
    fetch_and_save_inhibitors(target)

# Create a DataFrame showing the total number of molecules for each target
data = []
for target in targets:
    try:
        csv_file = f'{target}_inhibitors.csv'
        df = pd.read_csv(csv_file)
        num_molecules = len(df)
        data.append({'Target': target, 'Total Molecules': num_molecules})
    except FileNotFoundError:
        data.append({'Target': target, 'Total Molecules': 0})

df_total_molecules = pd.DataFrame(data)

# Save the DataFrame to a CSV file
df_total_molecules.to_csv('total_molecules_per_target.csv', index=False)

print("Total molecules per target:")
print(df_total_molecules)

import pandas as pd
from chembl_webresource_client.new_client import new_client

# List of targets
targets = [
    'ECSIT', 'IRAK2', 'TAB1', 'TAB2', 'TBK1', 'TIFA', 'TLR3', 'TRAF5', 'TRAF6', 'UBE2N', 'UBE2V1'
]

# Function to fetch all small molecules for a target
def fetch_and_save_molecules(target_name):
    # Initialize ChEMBL client
    chembl = new_client

    # Search for the target in ChEMBL
    target = chembl.target
    target_info = target.search(target_name)

    if not target_info:
        print(f"Target {target_name} not found in ChEMBL.")
        return

    # Get the target's ChEMBL ID
    target_id = target_info[0]['target_chembl_id']

    # Search for all small molecules for the target
    activities = chembl.activity
    results = activities.filter(target_chembl_id=target_id)

    if not results:
        print(f"No molecules found for {target_name}.")
        return

    # Create a DataFrame from the results
    df = pd.DataFrame(results)

    # Save the DataFrame to a CSV file
    csv_file = f'{target_name}_molecules.csv'
    df.to_csv(csv_file, index=False)

    print(f"Saved {len(df)} molecules for {target_name} to {csv_file}.")

# Loop through the targets and fetch/save all molecules
for target in targets:
    fetch_and_save_molecules(target)

# Create a DataFrame showing the total number of molecules for each target
data = []
for target in targets:
    try:
        csv_file = f'{target}_molecules.csv'
        df = pd.read_csv(csv_file)
        num_molecules = len(df)
        data.append({'Target': target, 'Total Molecules': num_molecules})
    except FileNotFoundError:
        data.append({'Target': target, 'Total Molecules': 0})

df_total_molecules = pd.DataFrame(data)

# Save the DataFrame to a CSV file
df_total_molecules.to_csv('total_molecules_per_target.csv', index=False)

print("Total molecules per target:")
print(df_total_molecules)